--- a/usr/share/lipstick-jolla-home-qt5/layers/EdgeLayer.qml
+++ b/usr/share/lipstick-jolla-home-qt5/layers/EdgeLayer.qml
@@ -30,6 +30,9 @@ Layer {
     property bool _smoothClip
     property bool _effectiveActive
 
+    property real intermediateStepThreshold: 0
+    property bool intermediateStepReached: false
+
     onActiveChanged: {
         _smoothClip = clip
         _effectiveActive = active
@@ -73,6 +76,7 @@ Layer {
             var dx = active ? x : x - _rightEdge
             var dy = active ? y : y - _bottomEdge
             if (Math.abs(dx) > threshold || Math.abs(dy) > threshold) {
+                intermediateStepReached = true
                 peekFilter.gestureTriggered()
             } else {
                 peekFilter.gestureCanceled()
@@ -250,6 +254,18 @@ Layer {
         bottomEnabled: (edgeLayer.edge == PeekFilter.Bottom && !edgeLayer.active)
                     || (edgeLayer.edge == PeekFilter.Top && edgeLayer.active)
 
+        onGestureStarted: intermediateStepReached = false
+
+        onAbsoluteProgressChanged: {
+           if (absoluteProgress == 0) {
+              return
+           } else if (edgeLayer._hideActive || (absoluteProgress > intermediateStepThreshold && !intermediateStepReached)) {
+              intermediateStepReached = true
+           } else if (absoluteProgress < intermediateStepThreshold && intermediateStepReached) {
+              intermediateStepReached = false
+           }
+        }
+
         states: [
             State {
                 name: "bottom"
--- a/usr/share/lipstick-jolla-home-qt5/layers/PowerKeyLayer.qml
+++ b/usr/share/lipstick-jolla-home-qt5/layers/PowerKeyLayer.qml
@@ -1,6 +1,9 @@
+
 import QtQuick 2.0
 import Sailfish.Silica 1.0
 import Sailfish.Lipstick 1.0
+import org.nemomobile.configuration 1.0
+import org.nemomobile.lipstick 0.1
 
 EdgeLayer {
     id: powerKeyLayer
@@ -11,6 +14,30 @@ EdgeLayer {
 
     edge: PeekFilter.Top
 
+    property bool verticalOrientation: Lipstick.compositor.topmostWindowOrientation === Qt.PortraitOrientation
+                                       || Lipstick.compositor.topmostWindowOrientation === Qt.InvertedPortraitOrientation
+
+    ConfigurationGroup {
+        id: swipeToLockSettings
+
+        path: "/desktop/lipstick-jolla-home/swipeToLock"
+
+        property bool enabled: true
+        property int threshold: 50
+    }
+
+    intermediateStepThreshold: swipeToLockSettings.enabled ?
+                                   Math.round(
+                                       (
+                                           (verticalOrientation ?
+                                              Screen.height :
+                                              Screen.width
+                                           ) * swipeToLockSettings.threshold
+                                       ) / 100
+                                   ) :
+                                   0
+
+
     function show() {
         if (!active) {
             toggleActive()
--- a/usr/share/lipstick-jolla-home-qt5/powerkey/PowerButton.qml
+++ b/usr/share/lipstick-jolla-home-qt5/powerkey/PowerButton.qml
@@ -30,7 +30,7 @@ MouseArea {
 
             anchors.centerIn: parent
 
-            source: button.down
+            source: (button.down || assumeDown)
                     ? button.iconSource + "?" + Theme.highlightColor
                     : button.iconSource
 
@@ -38,4 +38,7 @@ MouseArea {
             height: Theme.iconSizeLauncher
         }
     }
+
+    /* This is at the bottom to avoid conflicts with other patches */
+    property bool assumeDown: false
 }
--- a/usr/share/lipstick-jolla-home-qt5/powerkey/PowerKeyMenu.qml
+++ b/usr/share/lipstick-jolla-home-qt5/powerkey/PowerKeyMenu.qml
@@ -26,6 +26,8 @@ SilicaListView {
     readonly property real stackedItemHeight: Theme.paddingSmall
     readonly property real bottomStackHeight: Math.max(0, stackedItemHeight*Math.min((powerMenu.count-itemCount+1), stackCount))
 
+    readonly property bool lockIndication: !Lipstick.compositor.powerKeyLayer.intermediateStepReached
+
     property real contextMenuProgress
 
     implicitWidth: 4 * Theme.itemSizeExtraLarge
@@ -43,6 +45,19 @@ SilicaListView {
         }
     }
 
+    /*
+     * FIXME: I'm a bit of a noob with QML, is this the right way
+     * to connect to a foreign signal?
+    */
+    Component.onCompleted: Lipstick.compositor.powerKeyLayer.edgeFilter.gestureTriggered.connect(powerMenu.lockScreen)
+
+    function lockScreen() {
+        if (lockIndication) {
+            Lipstick.compositor.powerKeyLayer.hide()
+            Lipstick.compositor.setDisplayOff()
+        }
+    }
+
     model: AmbienceInstallModel {
         id: installModel
 
@@ -146,6 +161,8 @@ SilicaListView {
             clip: powerTransition.running
             visible: !shutdownButton.visible || powerTransition.running
 
+            assumeDown: lockIndication
+
             onClicked: Lipstick.compositor.setDisplayOff()
 
             iconSource: "image://theme/graphic-display-blank"
--- a/usr/share/jolla-settings/pages/gestures/gestures.qml
+++ b/usr/share/jolla-settings/pages/gestures/gestures.qml
@@ -42,6 +42,30 @@ Page {
 
             IconTextSwitch {
                 automaticCheck: false
+                checked: swipeToLockSettings.enabled
+                text: "Swipe to lock"
+                description: "A top edge swipe will permit to lock the screen"
+                onClicked: swipeToLockSettings.enabled = !swipeToLockSettings.enabled
+            }
+
+            Slider {
+                width: parent.width
+                enabled: swipeToLockSettings.enabled
+                handleVisible: enabled
+                label: "Lock threshold"
+                maximumValue: 90
+                minimumValue: 20
+                stepSize: 1
+                value: swipeToLockSettings.threshold
+                valueText: value + "%"
+
+                onPressAndHold: cancel()
+                onValueChanged: swipeToLockSettings.threshold = Math.round(value)
+            }
+
+
+            IconTextSwitch {
+                automaticCheck: false
                 checked: desktopSettings.left_peek_to_events
                 //% "Quick Events access"
                 text: qsTrId("settings_display-la-left_peek_at_events")
@@ -59,4 +83,12 @@ Page {
         property bool close_from_top: false
         property bool left_peek_to_events: false
     }
+
+    ConfigurationGroup {
+        id: swipeToLockSettings
+        path: "/desktop/lipstick-jolla-home/swipeToLock"
+
+        property bool enabled: true
+        property int threshold: 50
+    }
 }
